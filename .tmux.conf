bind t new-window
bind q kill-window
bind Tab next-window
bind S-Tab previous-window
bind q kill-pane
bind s split-window -v
bind v split-window -h

bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5




# Start copy mode when scrolling up and exit when scrolling down to bottom.
# The "#{mouse_any_flag}" check just sends scrolls to any program running that
# has mouse support (like vim).
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

## Reattach to user namespace
# set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
set-option -g default-shell $SHELL

# set -g default-command "reattach-to-user-namepsace -l /bin/bash"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

unbind r
bind r source-file ~/.tmux.conf

set -g history-limit 9999
set -sg escape-time 1
set -s escape-time 0
bind-key a last-window


setw -g aggressive-resize on

# QUENTINS TMUX

unbind C-b
set -g prefix C-a
bind C-a send-prefix

unbind ^A
bind ^A select-pane -t :.+

set -g mouse-utf8 on
set -g mouse on

# act like vim
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

set-window-option -g allow-rename off
set -g default-terminal "screen-256color"
set-option -g default-shell /bin/zsh

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy y copy-pipe "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy Enter copy-pipe "pbcopy"

set-option -g status-position top

# ----------------------
# Status Bar
# -----------------------
set-option -g status on                # turn the status bar on
set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify left             # center window list for clarity
# set-option -g status-position top    # position the status bar at top of screen

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# set color for status bar
set-option -g status-bg black#base02
set-option -g status-fg black #yellow
#set-option -g status-attr dim

set-option -g mode-bg black
set-option -g mode-fg black

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg black
#set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg yellow #orange
set-window-option -g window-status-current-bg black
#set-window-option -g window-status-current-attr bright

# show host name and IP address on left side of status bar
set -g status-left-length 0
set -g status-left "#[fg=green]"

# show session name, window & pane number, date and time on right side of
# status bar
set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]: %d %b %Y #[fg=green]: %l:%M %p : #(date -u | awk '{print $4}') "

# --------------------------------------------------------------------------------------------------

# Tmux plugin manager
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-resurrect   \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'


new-session -s main
